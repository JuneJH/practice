{"remainingRequest":"/Users/june/Desktop/work/practice/vue-family/node_modules/babel-loader/lib/index.js!/Users/june/Desktop/work/practice/vue-family/src/store/index.js","dependencies":[{"path":"/Users/june/Desktop/work/practice/vue-family/src/store/index.js","mtime":1628173535489},{"path":"/Users/june/Desktop/work/practice/vue-family/node_modules/cache-loader/dist/cjs.js","mtime":1627479180074},{"path":"/Users/june/Desktop/work/practice/vue-family/node_modules/babel-loader/lib/index.js","mtime":1627479180059}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9hc3luY1RvR2VuZXJhdG9yIGZyb20gIi9Vc2Vycy9qdW5lL0Rlc2t0b3Avd29yay9wcmFjdGljZS92dWUtZmFtaWx5L25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9hc3luY1RvR2VuZXJhdG9yIjsKaW1wb3J0ICJyZWdlbmVyYXRvci1ydW50aW1lL3J1bnRpbWUuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5vYmplY3QudG8tc3RyaW5nLmpzIjsKaW1wb3J0IFZ1ZSBmcm9tICd2dWUnOwppbXBvcnQgVnVleCBmcm9tICcuLi8uLi92dWUvbXktdnVleCc7ClZ1ZS51c2UoVnVleCk7CmV4cG9ydCBkZWZhdWx0IG5ldyBWdWV4LlN0b3JlKHsKICBzdGF0ZTogewogICAgY291bnQ6IDEsCiAgICBkYkNvdW50OiAyCiAgfSwKICBtdXRhdGlvbnM6IHsKICAgIGluY3JlYXNlOiBmdW5jdGlvbiBpbmNyZWFzZShzdGF0ZSkgewogICAgICByZXR1cm4gc3RhdGUuY291bnQrKzsKICAgIH0sCiAgICBkYkluY3JlYXNlOiBmdW5jdGlvbiBkYkluY3JlYXNlKHN0YXRlKSB7CiAgICAgIHJldHVybiBzdGF0ZS5kYkNvdW50ID0gc3RhdGUuY291bnQgKiAyOwogICAgfQogIH0sCiAgYWN0aW9uczogewogICAgYXN5bmNJbmNyZWFzZTogZnVuY3Rpb24gKCkgewogICAgICB2YXIgX2FzeW5jSW5jcmVhc2UgPSBfYXN5bmNUb0dlbmVyYXRvciggLyojX19QVVJFX18qL3JlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWUoX3JlZikgewogICAgICAgIHZhciBjb21taXQ7CiAgICAgICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWUkKF9jb250ZXh0KSB7CiAgICAgICAgICB3aGlsZSAoMSkgewogICAgICAgICAgICBzd2l0Y2ggKF9jb250ZXh0LnByZXYgPSBfY29udGV4dC5uZXh0KSB7CiAgICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgICAgY29tbWl0ID0gX3JlZi5jb21taXQ7CiAgICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQuYWJydXB0KCJyZXR1cm4iLCBuZXcgUHJvbWlzZShmdW5jdGlvbiAocmVzb2x2ZSwgcmVqZWN0KSB7CiAgICAgICAgICAgICAgICAgIHNldFRpbWVvdXQoZnVuY3Rpb24gKCkgewogICAgICAgICAgICAgICAgICAgIGNvbW1pdCh7CiAgICAgICAgICAgICAgICAgICAgICB0eXBlOiAiaW5jcmVhc2UiCiAgICAgICAgICAgICAgICAgICAgfSk7CiAgICAgICAgICAgICAgICAgICAgcmVzb2x2ZSgpOwogICAgICAgICAgICAgICAgICB9LCAyMDAwKTsKICAgICAgICAgICAgICAgIH0pKTsKCiAgICAgICAgICAgICAgY2FzZSAyOgogICAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQuc3RvcCgpOwogICAgICAgICAgICB9CiAgICAgICAgICB9CiAgICAgICAgfSwgX2NhbGxlZSk7CiAgICAgIH0pKTsKCiAgICAgIGZ1bmN0aW9uIGFzeW5jSW5jcmVhc2UoX3gpIHsKICAgICAgICByZXR1cm4gX2FzeW5jSW5jcmVhc2UuYXBwbHkodGhpcywgYXJndW1lbnRzKTsKICAgICAgfQoKICAgICAgcmV0dXJuIGFzeW5jSW5jcmVhc2U7CiAgICB9KCksCiAgICBhc3luY0RiSW5jcmVhc2U6IGZ1bmN0aW9uICgpIHsKICAgICAgdmFyIF9hc3luY0RiSW5jcmVhc2UgPSBfYXN5bmNUb0dlbmVyYXRvciggLyojX19QVVJFX18qL3JlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWUyKF9yZWYyKSB7CiAgICAgICAgdmFyIGRpc3BhdGNoLCBjb21taXQ7CiAgICAgICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWUyJChfY29udGV4dDIpIHsKICAgICAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgICAgIHN3aXRjaCAoX2NvbnRleHQyLnByZXYgPSBfY29udGV4dDIubmV4dCkgewogICAgICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgICAgIGRpc3BhdGNoID0gX3JlZjIuZGlzcGF0Y2gsIGNvbW1pdCA9IF9yZWYyLmNvbW1pdDsKICAgICAgICAgICAgICAgIF9jb250ZXh0Mi5uZXh0ID0gMzsKICAgICAgICAgICAgICAgIHJldHVybiBkaXNwYXRjaCh7CiAgICAgICAgICAgICAgICAgIHR5cGU6ICJhc3luY0luY3JlYXNlIgogICAgICAgICAgICAgICAgfSk7CgogICAgICAgICAgICAgIGNhc2UgMzoKICAgICAgICAgICAgICAgIGNvbW1pdCh7CiAgICAgICAgICAgICAgICAgIHR5cGU6ICJkYkluY3JlYXNlIgogICAgICAgICAgICAgICAgfSk7CgogICAgICAgICAgICAgIGNhc2UgNDoKICAgICAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0Mi5zdG9wKCk7CiAgICAgICAgICAgIH0KICAgICAgICAgIH0KICAgICAgICB9LCBfY2FsbGVlMik7CiAgICAgIH0pKTsKCiAgICAgIGZ1bmN0aW9uIGFzeW5jRGJJbmNyZWFzZShfeDIpIHsKICAgICAgICByZXR1cm4gX2FzeW5jRGJJbmNyZWFzZS5hcHBseSh0aGlzLCBhcmd1bWVudHMpOwogICAgICB9CgogICAgICByZXR1cm4gYXN5bmNEYkluY3JlYXNlOwogICAgfSgpCiAgfSwKICBnZXR0ZXI6IHsKICAgIGdldFN0YXRlQ291bnQ6IGZ1bmN0aW9uIGdldFN0YXRlQ291bnQoc3RhdGUpIHsKICAgICAgcmV0dXJuIHN0YXRlLmNvdW50ICsgc3RhdGUuZGJDb3VudDsKICAgIH0KICB9LAogIG1vZHVsZXM6IHt9Cn0pOw=="},{"version":3,"sources":["/Users/june/Desktop/work/practice/vue-family/src/store/index.js"],"names":["Vue","Vuex","use","Store","state","count","dbCount","mutations","increase","dbIncrease","actions","asyncIncrease","commit","Promise","resolve","reject","setTimeout","type","asyncDbIncrease","dispatch","getter","getStateCount","modules"],"mappings":";;;AAAA,OAAOA,GAAP,MAAgB,KAAhB;AACA,OAAOC,IAAP,MAAiB,mBAAjB;AAEAD,GAAG,CAACE,GAAJ,CAAQD,IAAR;AAEA,eAAe,IAAIA,IAAI,CAACE,KAAT,CAAe;AAC5BC,EAAAA,KAAK,EAAE;AACLC,IAAAA,KAAK,EAAC,CADD;AAELC,IAAAA,OAAO,EAAC;AAFH,GADqB;AAK5BC,EAAAA,SAAS,EAAE;AACTC,IAAAA,QAAQ,EAAC,kBAAAJ,KAAK;AAAA,aAAEA,KAAK,CAACC,KAAN,EAAF;AAAA,KADL;AAETI,IAAAA,UAAU,EAAC,oBAAAL,KAAK;AAAA,aAAEA,KAAK,CAACE,OAAN,GAAgBF,KAAK,CAACC,KAAN,GAAc,CAAhC;AAAA;AAFP,GALiB;AAS5BK,EAAAA,OAAO,EAAE;AACPC,IAAAA,aAAa;AAAA,mFAAC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAQC,gBAAAA,MAAR,QAAQA,MAAR;AAAA,iDACH,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAASC,MAAT,EAAkB;AACnCC,kBAAAA,UAAU,CAAC,YAAI;AACbJ,oBAAAA,MAAM,CAAC;AAACK,sBAAAA,IAAI,EAAC;AAAN,qBAAD,CAAN;AACAH,oBAAAA,OAAO;AACR,mBAHS,EAGR,IAHQ,CAAV;AAID,iBALM,CADG;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAD;;AAAA;AAAA;AAAA;;AAAA;AAAA,OADN;AASPI,IAAAA,eAAe;AAAA,qFAAC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAQC,gBAAAA,QAAR,SAAQA,QAAR,EAAiBP,MAAjB,SAAiBA,MAAjB;AAAA;AAAA,uBACRO,QAAQ,CAAC;AAACF,kBAAAA,IAAI,EAAC;AAAN,iBAAD,CADA;;AAAA;AAEdL,gBAAAA,MAAM,CAAC;AAACK,kBAAAA,IAAI,EAAC;AAAN,iBAAD,CAAN;;AAFc;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAD;;AAAA;AAAA;AAAA;;AAAA;AAAA;AATR,GATmB;AAuB5BG,EAAAA,MAAM,EAAC;AACLC,IAAAA,aAAa,EAAC,uBAAAjB,KAAK,EAAG;AACpB,aAAOA,KAAK,CAACC,KAAN,GAAcD,KAAK,CAACE,OAA3B;AACD;AAHI,GAvBqB;AA4B5BgB,EAAAA,OAAO,EAAE;AA5BmB,CAAf,CAAf","sourcesContent":["import Vue from 'vue'\nimport Vuex from '../../vue/my-vuex'\n\nVue.use(Vuex)\n\nexport default new Vuex.Store({\n  state: {\n    count:1,\n    dbCount:2,\n  },\n  mutations: {\n    increase:state=>state.count ++,\n    dbIncrease:state=>state.dbCount = state.count * 2\n  },\n  actions: {\n    asyncIncrease:async ({commit})=>{\n        return new Promise((resolve,reject)=>{\n          setTimeout(()=>{\n            commit({type:\"increase\"});\n            resolve();\n          },2000)\n        })\n    },\n    asyncDbIncrease:async ({dispatch,commit})=>{\n      await dispatch({type:\"asyncIncrease\"});\n      commit({type:\"dbIncrease\"})\n    }\n  },\n  getter:{\n    getStateCount:state=> {\n      return state.count + state.dbCount\n    }\n  },\n  modules: {\n  }\n})\n"]}]}